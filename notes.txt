https://towardsdatascience.com/deploy-your-jupyter-notebooks-the-easy-way-python-edition-f831400c1905
    https://mybinder.org/
    https://github.com/valhuber/ApiLogicServerTutorial.git
    ==> https://mybinder.org/v2/gh/valhuber/ApiLogicServer.git/HEAD
    https://mybinder.org/v2/gh/valhuber/ApiLogicServerTutorial/569e4750e19e90c0d1ab8945c6bcefa819ed29b0

binder undoes requirements
  https://github.com/jupyterlab/jupyterlab/issues/9796

No pre-open
  https://github.com/jupyterlab/jupyterlab/issues/9795

No Browser access to proxy - category of Binder (/ Jupyterhub?)
  https://github.com/jupyterhub/mybinder.org-deploy/issues/1842

https://notebooks.gesis.org/binder/v2/gh/valhuber/ApiLogicServerTutorial/HEAD?urlpath=lab


ERROR: After October 2020 you may experience errors when installing or updating packages. This is because pip will change the way that it resolves dependency conflicts.

We recommend you use --use-feature=2020-resolver to test your packages with the new resolver before it becomes the default.

requests 2.25.1 requires idna<3,>=2.5, but you'll have idna 3.1 which is incompatible.


per https://github.com/json-api/json-api/issues/1089 -- list += data tag?

curl -X POST "http://localhost:5000/Order/"\
 -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json"\
 -d "\
{  \"data\": {\
      \"attributes\": {\
         \"CustomerId\": \"ALFKI\",\
         \"EmployeeId\": 1,\
         \"Freight\": 10},\
      \"relationships\": {\
         \"OrderDetailList\": \
            [ {\
                \"ProductId\": 1,\
                \"Quantity\": 1 \
              } ]\
    },\
  \"type\": \"Order\"\
  }\
}"

curl -X POST "http://localhost:5000/Order/"\
 -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json"\
 -d "\
{  \"data\": {\
      \"attributes\": {\
         \"CustomerId\": \"ALFKI\",\
         \"EmployeeId\": 1,\
         \"Freight\": 10},\
      \"relationships\": {\
         \"OrderDetailList\": \
            { \"data\": {\
              [ {\
                  \"ProductId\": 1,\
                  \"Quantity\": 1 \
                } ]\
            }\
    },\
  \"type\": \"Order\"\
  }\
}"

Thomas example:
curl -X POST "http://localhost:5000/api/Books/" -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json" -d '{
  "data": {
    "attributes": {
        "title": "test"
    },
    "relationships": {
      "reader": {
        "data": {
          "id": null,
          "type": "Person",
          "attributes": {
            "name": "boo"
          }
        }
      }
    },
    "type": "Book",
    "id": "0b22014c-bcb7-4d89-9851-9d99bca16590"
  }
}'

so...

{
  "data": {
    "attributes": {
      "CustomerId": "ALFKI",
      "EmployeeId": 1,
      "Freight": "10"
    },
    "relationships": {
      "OrderDetailList": [
        {
          "data": {
            "id": null,
            "type": "OrderDetail",
            "attributes": [
              {
                "ProductId": 1,
                "Quantity": 1
              }
            ]
          }
        }
      ]
    },
    "type": "Order"
  }
}

he skypes:
{
  "data": {
    "attributes": {
      "CustomerId": "ALFKI",
      "EmployeeId": 1,
      "Freight": "10"
    },
    "relationships": {
      "OrderDetailList": [{
        "data": {
          "id": null,
          "type": "OrderDetail"

        }
      }]
    },
    "type": "Order"
  }
}
 and then

 {
  "data": {
    "attributes": {
      "CustomerId": "ALFKI",
      "EmployeeId": 1,
      "Freight": "10"
    },
    "relationships": {
      "OrderDetailList": {
        "data": [
          {
            "id": null,
            "type": "OrderDetail",
            "attributes" : {"ProductId": 1,"Quantity": 1}
          }
        ]
      }
    },
    "type": "Order"
  }
}

===> no attribute: ShippedDate

rpc:

{
  "meta": {
    "method": "add_order",
    "args": {
      "date": "ccc",
      "OrderDetailList": [
         {"product": "hammer", "qty": 2},
         {"product": "shovel", "qty": 3},
       ]
    }
  }
}


        """ POST to Order/add_order
        {
            "meta": {
                "method": "add_order",
                "args": {
                  "EmployeeId": 6,
                  "Freight": 10,
                  "OrderDetailList": [
                     {"ProductId": 1, "qty": 2},
                     {"ProductId": 2, "qty": 3}
                  ]
                }
            }
        }
        """


curl -X POST "http://localhost:5000/Order/" -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json" -d "{  \"data\": {    \"attributes\": {      \"CustomerId\": \"ALFKI\",      \"EmployeeId\": 1,      \"Freight\": \"10\"    },    \"relationships\": {      \"OrderDetailList\": [{        \"data\": {          \"id\": null,          \"type\": \"OrderDetail\"                  }      }]    },    \"type\": \"Order\"  }}"

curl -X POST "http://localhost:5000/Order/"\
 -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json"\
 -d "\
{  \"data\": {\
      \"attributes\": {\
         \"CustomerId\": \"ALFKI\",\
         \"EmployeeId\": 1,\
         \"Freight\": 10},\
      \"relationships\": {\
         \"OrderDetailList\": {\
            \"data\": {\
              \"id\": null,\
              \"type\": "\OrderDetail\",
              \"attributes\":\
                [ {\
                    \"ProductId\": 1,\
                    \"Quantity\": 1 \
                  } ]\
            }\
        }\
    }\
  \"type\": \"Order\"\
  }\
}"

thinking about for lookup

curl -X POST "http://localhost:5000/Order/"\
 -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json"\
 -d "\
{  \"data\": {\
      \"attributes\": {\
         \"CustomerId\": \"ALFKI\",\
         \"EmployeeId\": 1,\
         \"Freight\": 10},\
      \"relationships\": {\
         \"OrderDetailList\": \
            [ {\
                \"ProductId\": 1,\
                \"relationships\": {\  # how to signal lookup vs post
                  \"Product\":\
                    {\
                      \"ProductName\": "Bolt"\
                    }
                \"Quantity\": 1 \
              } ]\
    },\
  \"type\": \"Order\"\
  }\
}"


curl -X POST "http://localhost:5000/Order/" -H  "accept: application/vnd.api+json" -H  "Content-Type: application/json" -d "\
{  \"data\":\
  {\
      \"attributes\": {\
        \"CustomerId\": \"ALFKI\",\
        \"EmployeeId\": 1,\
        \"Freight\": 10,\
        \"OrderDetailList\": [ {\
             \"ProductId\": 1,\
             \"Quantity\": 1 \
             }      ]    },\
      \"type\": \"Order\"\
  }\
}"

{
  "data": {
    "attributes": {
      "CustomerId": "ALFKI",
      "OrderDetailList": [
        {
          "ProductId": 1,
          "Quantity": 1
        }
      ]
    },
    "type": "Order"
  }
}

{
  "data": {
    "attributes": {
      "Salary": "90000"
    },
    "type": "Employee",
    "id": "1"
  }
}


Thomas mail 2/25
{
  "data": {
    "attributes": {
      "CustomerId": "ALFKI",
      "EmployeeId": 1,
      "Freight": 10
    },
    "relationships": {
      "OrderDetailList": {
        "data": [
          {
            "type": "OrderDetail",
            "ProductId": 1,
            "Quantity": 1,
            "Discount": 0
          },
          {
            "type": "OrderDetail",
            "ProductId": 2,
            "Quantity": 2,
            "Discount": 0
          }
        ]
      }
    },
    "type": "Order"
  }
}


Suggested

https://notebooks.gesis.org/binder/jupyter/user/valhuber-apilogicservertutorial-6easlb4a/proxy/5000/

https://notebooks.gesis.org/binder/jupyter/user/valhuber-apilogicservertutorial-tyc6zhvz/proxy/5000 - not found

https://notebooks.gesis.org/binder/jupyter/user/valhuber-apilogicservertutorial-tyc6zhvz/proxy:5000 - nf

https://notebooks.gesis.org/binder/jupyter/user/valhuber-apilogicservertutorial-tyc6zhvz:5000 - forbidden

tyc6zhvz

Binder link: https://notebooks.gesis.org/binder/v2/gh/valhuber/ApiLogicServerTutorial/ec186fe7008b580d3fc9775e52c504aea71ef48c

https://notebooks.gesis.org/binder/v2/gh/valhuber/ApiLogicServerTutorial/ec186fe7008b580d3fc9775e52c504aea71ef48c/proxy/5000



or proxy:5000, or no proxy



 curl -X GET "http://localhost:5000/Order\
 ?fields%5BOrder%5D=Id%2CCustomerId%2CEmployeeId%2COrderDate%2CAmountTotal\
 &page%5Boffset%5D=0\
 &page%5Blimit%5D=2\
 &sort=Id%2CCustomerId%2CEmployeeId\
 &filter%5BCustomerId%5D=ALFKI\
  -H  "accept: application/vnd.api+json" \
  -H  "Content-Type: application/vnd.api+json"

curl -X GET "http://localhost:5000/Order\
?include=\
&fields%5BOrder%5D=Id%2CCustomerId%2CEmployeeId%2COrderDate%2CAmountTotal\
&page%5Boffset%5D=0\
&page%5Blimit%5D=2\
&sort=Id%2CCustomerId%2CEmployeeId\
&filter%5BCustomerId%5D=ALFKI"\
 -H  "accept: application/vnd.api+json" \
 -H  "Content-Type: application/vnd.api+json"


curl -X PATCH "http://localhost:5000/Employee/1/"\
 -H  "accept: application/vnd.api+json"\
  -H  "Content-Type: application/json" -d "{  \"data\": {\
      \"attributes\": {      \"Salary\": \"90000\"    },\
          \"type\": \"Employee\",    \"id\": \"1\"  }}"


 curl -X PATCH "http://localhost:5000/Employee/1/"\
  -H  "accept: application/vnd.api+json"\
  -H  "Content-Type: application/json"
  -d "{  \"data\": {\
      \"attributes\": {\
            \"Salary\": \"90000\"    },\
      \"type\": \"Employee\",    \"id\": \"1\"  }}"

curl -X GET "http://localhost:5000/hello_world?user=ApiLogicServer"

  -H  "accept: application/vnd.api+json" \
  -H  "Content-Type: application/vnd.api+json"

  http://localhost:5000/hello_world?user=ApiLogicServer

 startup??
  https://github.com/jupyterlab/jupyterlab-demo/tree/master/binder
  https://github.com/martinRenou/ipycanvas/issues/95
 Step 43/47 : RUN chmod +x binder/postBuild
 ---> [Warning] Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
 ---> Running in 127ec3dcb32b
Removing intermediate container 127ec3dcb32b
 ---> d7884c98d539
Step 44/47 : RUN ./binder/postBuild
 ---> [Warning] Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
 ---> Running in 89e21dfaf93d
+ jupyter lab workspaces import binder/workspace.json

---> [Warning] Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
---> Running in 5311283a96ac
Removing intermediate container 5311283a96ac
---> b4c082c69aec
Step 47/47 : CMD ["jupyter", "notebook", "--ip", "0.0.0.0"]
---> [Warning] Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
---> Running in 2f017db86080
Removing intermediate container 2f017db86080
---> 47059c9c0836
{"aux": {"ID": "sha256:47059c9c0836373d0060d3a2b65426fb356bb9fe6362bd746aa432fc23feb512"}}Successfully built 47059c9c0836
Successfully tagged gesiscss/binder-valhuber-2dapilogicservertutorial-fe8dc3:dba51df8ffadc16d6b0282516aaf4dd653f9c3b5
Pushing image
Pushing image
Pushing image
Pushing image
